<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Introducción</title>
      <link href="//post/nest.html"/>
      <url>//post/nest.html</url>
      
        <content type="html"><![CDATA[<h1 id="Introduccion-a-NestJS-Construyendo-Aplicaciones-Escalables-con-Node-js"><a href="#Introduccion-a-NestJS-Construyendo-Aplicaciones-Escalables-con-Node-js" class="headerlink" title="Introducción a NestJS: Construyendo Aplicaciones Escalables con Node.js"></a>Introducción a NestJS: Construyendo Aplicaciones Escalables con Node.js</h1><p>Si estás buscando un framework robusto y elegante para desarrollar aplicaciones backend en Node.js, <strong>NestJS</strong> podría ser tu próxima herramienta favorita. En este post, exploraremos qué es NestJS, sus características clave y cómo comenzar a usarlo para crear APIs escalables y mantenibles.</p><h2 id="¿Que-es-NestJS"><a href="#¿Que-es-NestJS" class="headerlink" title="¿Qué es NestJS?"></a>¿Qué es NestJS?</h2><p>NestJS es un framework <strong>progresivo</strong> para construir aplicaciones server-side eficientes y escalables con Node.js. Combina elementos de programación orientada a objetos (OOP), funcional (FP) y reactiva (FRP), ofreciendo una arquitectura modular inspirada en Angular. Está construido sobre Express (pero también es compatible con Fastify), lo que le permite aprovechar la amplia comunidad de middleware de Node.js mientras añade capas de abstracción para mejorar la estructura del código.</p><p>Entre sus objetivos principales están:</p><ul><li>Proporcionar una arquitectura predecible para equipos grandes.</li><li>Integrar buenas prácticas como Inyección de Dependencias (DI) y principios SOLID.</li><li>Ser compatible por defecto con TypeScript (aunque también soporta JavaScript).</li></ul><h2 id="Caracteristicas-Principales"><a href="#Caracteristicas-Principales" class="headerlink" title="Características Principales"></a>Características Principales</h2><ol><li><strong>Arquitectura Modular</strong><br>Las aplicaciones se organizan en módulos, facilitando la reutilización y el mantenimiento.</li><li>TypeScript First<br>Ofrece tipos estáticos y decoradores para definir rutas, servicios, módulos y más.</li><li>Inyección de Dependencias (DI)<br>Gestiona automáticamente las dependencias entre componentes, promoviendo código desacoplado y testeable.</li><li>Ecosistema Integrado<br>Soporta REST APIs, GraphQL, WebSockets, microservicios, tareas programadas (CRON), y más, con librerías como <code>@nestjs/mongoose</code> (MongoDB) o <code>@nestjs/typeorm</code> (SQL).</li><li>CLI Poderoso<br>Genera módulos, controladores, servicios y otros elementos con comandos simples.</li><li>Compatible con Express y Fastify<br>Permite cambiar el motor HTTP subyacente para optimizar rendimiento.</li></ol><h2 id="Conceptos-Clave"><a href="#Conceptos-Clave" class="headerlink" title="Conceptos Clave"></a>Conceptos Clave</h2><ul><li><strong>Módulos</strong> (<code>@Module</code>)<br>Agrupan funcionalidades relacionadas. Cada aplicación tiene al menos un módulo raíz (<strong>AppModule</strong>).  <figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [<span class="title class_">OtherModules</span>],</span><br><span class="line">  <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">  <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">* **Controladores** (`</span><span class="meta">@Controller</span><span class="string">`)  </span></span><br><span class="line"><span class="string">Manejan solicitudes HTTP y definen rutas.</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>typescript</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&#x27;users&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UsersController</span> &#123;</span><br><span class="line">  <span class="meta">@Get</span>()</span><br><span class="line">  <span class="title function_">getUsers</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Lista de usuarios&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">* **Proveedores** (`</span><span class="meta">@Injectable</span><span class="string">`)  </span></span><br><span class="line"><span class="string">Servicios, repositorios o fábricas que se inyectan en controladores u otros proveedores.</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>typescript</span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppService</span> &#123;</span><br><span class="line">  <span class="title function_">getHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>Decoradores</strong><br>Como <code>@Get()</code>, <code>@Post()</code>, o <code>@Param()</code>, para definir rutas y extraer datos de las solicitudes.</li></ul><h2 id="Empezando-con-NestJS"><a href="#Empezando-con-NestJS" class="headerlink" title="Empezando con NestJS"></a>Empezando con NestJS</h2><ol><li><strong>Instalar el CLI</strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g @nestjs/cli</span><br></pre></td></tr></table></figure></li><li><strong>Crear un proyecto</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nest new mi-proyecto</span><br></pre></td></tr></table></figure></li><li><strong>Generar recursos</strong><br>Usa el CLI para crear módulos, controladores y servicios:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nest generate module <span class="built_in">users</span></span><br><span class="line">nest generate controller <span class="built_in">users</span></span><br><span class="line">nest generate service <span class="built_in">users</span></span><br></pre></td></tr></table></figure></li><li><strong>Ejecutar la aplicación</strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run start:dev</span><br></pre></td></tr></table></figure></li></ol><p>Visita <code>http://localhost:3000</code> para probar tu API.</p><h2 id="¿Por-que-Elegir-NestJS"><a href="#¿Por-que-Elegir-NestJS" class="headerlink" title="¿Por qué Elegir NestJS?"></a>¿Por qué Elegir NestJS?</h2><ul><li><strong>Estructura para Equipos Grandes</strong>: Ideal para proyectos complejos gracias a su arquitectura modular.</li><li><strong>TypeScript Nativo</strong>: Reduce errores y mejora la mantenibilidad.</li><li><strong>Comunidad Activa</strong>: Con soporte para herramientas como Swagger (OpenAPI), Passport (autenticación), y más.</li><li><strong>Escalabilidad</strong>: Facilita la transición a microservicios o la integración con sistemas de mensajería.</li></ul><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusión"></a>Conclusión</h2><p>NestJS es una excelente opción si buscas un framework moderno que combine flexibilidad y estructura sólida. Su enfoque en patrones de diseño probados y su integración con tecnologías populares lo hacen ideal tanto para startups como para empresas.</p><p>¿Listo para profundizar? Explora la documentación oficial y comienza a construir APIs robustas con TypeScript.</p><p>Si te gustó este post, comparte tus experiencias con NestJS en los comentarios. ¿Prefieres Express, Fastify u otro framework? ¡Hablemos!</p>]]></content>
      
      
      
        <tags>
            
            <tag> nest </tag>
            
            <tag> nodejs </tag>
            
            <tag> express </tag>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introducción</title>
      <link href="//post/intro.html"/>
      <url>//post/intro.html</url>
      
        <content type="html"><![CDATA[<h1 id="Introduccion"><a href="#Introduccion" class="headerlink" title="Introducción"></a>Introducción</h1><p>¡Hola! Este es mi primer post en el blog.</p><p>Para empezar, me gustaría presentarme. Ya tengo una página dedicada a hablar <a href="/about">sobre mi</a>, pero esa página está más enfocada a mostrar mi currículum de cara a los recruiters. En este post me gustaría presentarme de forma más informal, de forma parecida a como me presentaría a los nuevos compañeros (no exactamente así, aquí contaré un poco más sobre mí vida 😋)</p><h2 id="Quien-soy"><a href="#Quien-soy" class="headerlink" title="Quien soy"></a>Quien soy</h2><p>Mi nombre es Darío Rodríguez (si, igual que el nombre de la web, soy muy original 😁). Nací en Cangas do Morrazo, provincia de Pontevedra, pero actualmente resido en Valencia.</p><p>Actualmente trabajo desarrollando aplicaciones web. Mi rol concreto va cambiando según las necesidades la empresa, pero normalmente suelen ser Technical architech, Tech-lead o full-stack developer. Personalmente lo que más me gusta hacer es diseñar y desarrollar la parte backend de las aplicaciones. El lenguaje que más uso a día de hoy es Typescript, pero he trabajado con alguno más: Java, Python, PHP, Groovy (únicamente para crear shared libraries de Jenkins)… (como prodrás ver no he puesto ni HTML ni CSS ya que NO SON LENGUAGES DE PROGRAMACIÓN).</p><p>Soy un apasionado de la tecnología, concretamente de la programación. Suelo dedicar más tiempo del que me gustaría admitir investigando nuevos frameworks, aprendiendo nuevos lenguajes, leyendo libros sobre programación, etc. Esta pasión me suele llevar a aprender sobre todo tipo de cosas, que luego puedo aplicar en mi día a día, y de ahí que mi rol vaya cambiando dependiendo de las necesidades. Estar constantemente aprendiendo también me sirve a la hora de afrontar nuevos retos, ya que por norma general no tengo miedo a enfrontarme a algo que me es desconocido. Con todo esto puedo decir que soy una persona afortunada, ya que mi trabajo está relacionado con una de las cosas que más me gustan hacer, es más, podría llegar a hacerlo aunque no me pagasen por ello.</p><p>Cuando quiero despejar la mente lo que suelo hacer es pasar tiempo con mis hijos, ver series y jugar a videojuegos.</p><h2 id="Proposito-del-blog"><a href="#Proposito-del-blog" class="headerlink" title="Propósito del blog"></a>Propósito del blog</h2><p>El principal propósito del blog es escribir para mi yo del futuro. Aunque existe muchísima información sobre cualquier tema en internet, suele ser bastante difícil encontrar una fuente fiable y completa, por tanto en este blog trataré los temas como a mí me gustaría encontrármelos en internet. Además, escribir sobre algo te impulsa a ser más preciso y a investigar más sobre el tema, así que otro propósito del blog es <em>forzarme</em> a adquirir más conocimiento para poder añadir información más precisa y completa a todos mis posts.</p><p>El último objetivo es poder ayudar a mis compañeros (o a cualquiera) en su aprendizaje. Suelo dedicar tiempo de mi jornada laboral en ayudar a cualquiera que me lo pida, pero hay veces que no puedo llegar a todos. Para esto, intentaré escribir posts sobre lo que más me pregunta la gente y así compartirlo con ellos. Con esto no pretendo pasar un enlace y pasar de la gente, pero si proporcionarle información de forma rápida y cuando me sea posible resolverle las dudas que le queden de forma más directa.</p><p>El idioma de los posts puede variar. Normalmente escribiré en castellano pero si pretendo que algún post llegue a algún compañero fuera de España puede que lo escriba en Inglés.</p><h2 id="Tecnologia-del-blog"><a href="#Tecnologia-del-blog" class="headerlink" title="Tecnología del blog"></a>Tecnología del blog</h2><p>Para este blog he utilizado <a href="https://hexo.io/">hexo</a> con el tema <a href="https://github.com/auroral-ui/hexo-theme-aurora">aurora</a>.</p><p>Los motivos para elegir <a href="https://hexo.io/">hexo</a> fueron:</p><ul><li>No quería base de datos.</li><li>Quería algo que se pudiese desplegar directamente en GitHub pages.</li><li>Debía de ser customizable, pero a la vez que fuese rápido de ponerlo en marcha.</li></ul><p>Con todo esto se me vino a la mente herramientas como <a href="https://jekyllrb.com/">Jekyll</a> o <a href="https://gohugo.io/">Hugo</a>, pero como últimamente me atrae mucho NodeJS decidí buscar algo similar para esa tecnología y fue ahí cuando encontré <a href="https://hexo.io/">hexo</a>. También pensé en <a href="https://www.mkdocs.org/">mkdocs</a>, pero es más para generar páginas estáticas así que lo descarté.</p><p>El tema <a href="https://github.com/auroral-ui/hexo-theme-aurora">aurora</a> simplemente fue “el que más me gustó” dentro de una lista de temas, tampoco me compliqué mucho buscándolo 😅.</p>]]></content>
      
      
      
        <tags>
            
            <tag> yo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
