[{"id":"87f7fda2bbc28a023cd312e8d321db40","title":"NestJS","content":"Introducci√≥n a NestJS: Construyendo Aplicaciones Escalables con Node.jsSi est√°s buscando un framework robusto y elegante para desarrollar aplicaciones backend en Node.js, NestJS podr√≠a ser tu pr√≥xima herramienta favorita. En este post, exploraremos qu√© es NestJS, sus caracter√≠sticas clave y c√≥mo comenzar a usarlo para crear APIs escalables y mantenibles.\n¬øQu√© es NestJS?NestJS es un framework progresivo para construir aplicaciones server-side eficientes y escalables con Node.js. Combina elementos de programaci√≥n orientada a objetos (OOP), funcional (FP) y reactiva (FRP), ofreciendo una arquitectura modular inspirada en Angular. Est√° construido sobre Express (pero tambi√©n es compatible con Fastify), lo que le permite aprovechar la amplia comunidad de middleware de Node.js mientras a√±ade capas de abstracci√≥n para mejorar la estructura del c√≥digo.\nEntre sus objetivos principales est√°n:\n\nProporcionar una arquitectura predecible para equipos grandes.\nIntegrar buenas pr√°cticas como Inyecci√≥n de Dependencias (DI) y principios SOLID.\nSer compatible por defecto con TypeScript (aunque tambi√©n soporta JavaScript).\n\nCaracter√≠sticas Principales\nArquitectura ModularLas aplicaciones se organizan en m√≥dulos, facilitando la reutilizaci√≥n y el mantenimiento.\nTypeScript FirstOfrece tipos est√°ticos y decoradores para definir rutas, servicios, m√≥dulos y m√°s.\nInyecci√≥n de Dependencias (DI)Gestiona autom√°ticamente las dependencias entre componentes, promoviendo c√≥digo desacoplado y testeable.\nEcosistema IntegradoSoporta REST APIs, GraphQL, WebSockets, microservicios, tareas programadas (CRON), y m√°s, con librer√≠as como @nestjs/mongoose (MongoDB) o @nestjs/typeorm (SQL).\nCLI PoderosoGenera m√≥dulos, controladores, servicios y otros elementos con comandos simples.\nCompatible con Express y FastifyPermite cambiar el motor HTTP subyacente para optimizar rendimiento.\n\nConceptos Clave\nM√≥dulos (@Module)Agrupan funcionalidades relacionadas. Cada aplicaci√≥n tiene al menos un m√≥dulo ra√≠z (AppModule).  123456789101112131415161718192021222324252627@Module(&#123;  imports: [OtherModules],  controllers: [AppController],  providers: [AppService],&#125;)export class AppModule &#123;&#125;```  * **Controladores** (`@Controller`)  Manejan solicitudes HTTP y definen rutas.```typescript@Controller(&#x27;users&#x27;)export class UsersController &#123;  @Get()  getUsers() &#123;    return &#x27;Lista de usuarios&#x27;;  &#125;&#125;```  * **Proveedores** (`@Injectable`)  Servicios, repositorios o f√°bricas que se inyectan en controladores u otros proveedores.```typescript@Injectable()export class AppService &#123;  getHello() &#123;    return &#x27;Hello World!&#x27;;  &#125;&#125;\nDecoradoresComo @Get(), @Post(), o @Param(), para definir rutas y extraer datos de las solicitudes.\n\nEmpezando con NestJS\nInstalar el CLI  1npm i -g @nestjs/cli\nCrear un proyecto1nest new mi-proyecto\nGenerar recursosUsa el CLI para crear m√≥dulos, controladores y servicios:123nest generate module usersnest generate controller usersnest generate service users\nEjecutar la aplicaci√≥n  1npm run start:dev\n\nVisita http://localhost:3000 para probar tu API.\n¬øPor qu√© Elegir NestJS?\nEstructura para Equipos Grandes: Ideal para proyectos complejos gracias a su arquitectura modular.\nTypeScript Nativo: Reduce errores y mejora la mantenibilidad.\nComunidad Activa: Con soporte para herramientas como Swagger (OpenAPI), Passport (autenticaci√≥n), y m√°s.\nEscalabilidad: Facilita la transici√≥n a microservicios o la integraci√≥n con sistemas de mensajer√≠a.\n\nConclusi√≥nNestJS es una excelente opci√≥n si buscas un framework moderno que combine flexibilidad y estructura s√≥lida. Su enfoque en patrones de dise√±o probados y su integraci√≥n con tecnolog√≠as populares lo hacen ideal tanto para startups como para empresas.\n¬øListo para profundizar? Explora la documentaci√≥n oficial y comienza a construir APIs robustas con TypeScript.\nSi te gust√≥ este post, comparte tus experiencias con NestJS en los comentarios. ¬øPrefieres Express, Fastify u otro framework? ¬°Hablemos!\n","slug":"nest","date":"2024-10-14T21:59:19.000Z","categories_index":"","tags_index":"nest,nodejs,express,typescript","author_index":"Dario"},{"id":"64f58a743d6f845ad2670994de2abb11","title":"Introducci√≥n","content":"Introducci√≥n¬°Hola! Este es mi primer post en el blog.\nPara empezar, me gustar√≠a presentarme. Ya tengo una p√°gina dedicada a hablar sobre mi, pero esa p√°gina est√° m√°s enfocada a mostrar mi curr√≠culum de cara a los recruiters. En este post me gustar√≠a presentarme de forma m√°s informal, de forma parecida a como me presentar√≠a a los nuevos compa√±eros (no exactamente as√≠, aqu√≠ contar√© un poco m√°s sobre m√≠ vida üòã)\nQuien soyMi nombre es Dar√≠o Rodr√≠guez (si, igual que el nombre de la web, soy muy original üòÅ). Nac√≠ en Cangas do Morrazo, provincia de Pontevedra, pero actualmente resido en Valencia.\nActualmente trabajo desarrollando aplicaciones web. Mi rol concreto va cambiando seg√∫n las necesidades la empresa, pero normalmente suelen ser Technical architech, Tech-lead o full-stack developer. Personalmente lo que m√°s me gusta hacer es dise√±ar y desarrollar la parte backend de las aplicaciones. El lenguaje que m√°s uso a d√≠a de hoy es Typescript, pero he trabajado con alguno m√°s: Java, Python, PHP, Groovy (√∫nicamente para crear shared libraries de Jenkins)‚Ä¶ (como prodr√°s ver no he puesto ni HTML ni CSS ya que NO SON LENGUAGES DE PROGRAMACI√ìN).\nSoy un apasionado de la tecnolog√≠a, concretamente de la programaci√≥n. Suelo dedicar m√°s tiempo del que me gustar√≠a admitir investigando nuevos frameworks, aprendiendo nuevos lenguajes, leyendo libros sobre programaci√≥n, etc. Esta pasi√≥n me suele llevar a aprender sobre todo tipo de cosas, que luego puedo aplicar en mi d√≠a a d√≠a, y de ah√≠ que mi rol vaya cambiando dependiendo de las necesidades. Estar constantemente aprendiendo tambi√©n me sirve a la hora de afrontar nuevos retos, ya que por norma general no tengo miedo a enfrontarme a algo que me es desconocido. Con todo esto puedo decir que soy una persona afortunada, ya que mi trabajo est√° relacionado con una de las cosas que m√°s me gustan hacer, es m√°s, podr√≠a llegar a hacerlo aunque no me pagasen por ello.\nCuando quiero despejar la mente lo que suelo hacer es pasar tiempo con mis hijos, ver series y jugar a videojuegos.\nProp√≥sito del blogEl principal prop√≥sito del blog es escribir para mi yo del futuro. Aunque existe much√≠sima informaci√≥n sobre cualquier tema en internet, suele ser bastante dif√≠cil encontrar una fuente fiable y completa, por tanto en este blog tratar√© los temas como a m√≠ me gustar√≠a encontr√°rmelos en internet. Adem√°s, escribir sobre algo te impulsa a ser m√°s preciso y a investigar m√°s sobre el tema, as√≠ que otro prop√≥sito del blog es forzarme a adquirir m√°s conocimiento para poder a√±adir informaci√≥n m√°s precisa y completa a todos mis posts.\nEl √∫ltimo objetivo es poder ayudar a mis compa√±eros (o a cualquiera) en su aprendizaje. Suelo dedicar tiempo de mi jornada laboral en ayudar a cualquiera que me lo pida, pero hay veces que no puedo llegar a todos. Para esto, intentar√© escribir posts sobre lo que m√°s me pregunta la gente y as√≠ compartirlo con ellos. Con esto no pretendo pasar un enlace y pasar de la gente, pero si proporcionarle informaci√≥n de forma r√°pida y cuando me sea posible resolverle las dudas que le queden de forma m√°s directa.\nEl idioma de los posts puede variar. Normalmente escribir√© en castellano pero si pretendo que alg√∫n post llegue a alg√∫n compa√±ero fuera de Espa√±a puede que lo escriba en Ingl√©s.\nTecnolog√≠a del blogPara este blog he utilizado hexo con el tema aurora.\nLos motivos para elegir hexo fueron:\n\nNo quer√≠a base de datos.\nQuer√≠a algo que se pudiese desplegar directamente en GitHub pages.\nDeb√≠a de ser customizable, pero a la vez que fuese r√°pido de ponerlo en marcha.\n\nCon todo esto se me vino a la mente herramientas como Jekyll o Hugo, pero como √∫ltimamente me atrae mucho NodeJS decid√≠ buscar algo similar para esa tecnolog√≠a y fue ah√≠ cuando encontr√© hexo. Tambi√©n pens√© en mkdocs, pero es m√°s para generar p√°ginas est√°ticas as√≠ que lo descart√©.\nEl tema aurora simplemente fue ‚Äúel que m√°s me gust√≥‚Äù dentro de una lista de temas, tampoco me compliqu√© mucho busc√°ndolo üòÖ.\n","slug":"intro","date":"2021-07-14T21:59:19.000Z","categories_index":"","tags_index":"yo","author_index":"Dario"}]